// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  firstName     String?        // Optional field for additional user data
  lastName      String?        // Optional field for additional user data
  password_hash String         @map("password_hash")
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  refreshTokens RefreshToken[]
  goals         Goal[]

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  isRevoked Boolean  @default(false)

  @@map("refresh_tokens")
}

model Goal {
  id                     Int       @id @default(autoincrement())
  userId                 Int       @map("user_id")
  user                   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title                  String    @db.VarChar(255)
  description            String?   @db.Text
  category               String?   @db.VarChar(100)
  difficultyLevel        String    @default("medium") @map("difficulty_level") @db.VarChar(20)
  targetCompletionDate   DateTime? @map("target_completion_date")
  isCompleted            Boolean   @default(false) @map("is_completed")
  completionDate         DateTime? @map("completion_date")
  progressPercentage     Int       @default(0) @map("progress_percentage")
  pointsReward           Int       @default(100) @map("points_reward")
  isPublic               Boolean   @default(false) @map("is_public")
  createdAt              DateTime  @default(now()) @map("created_at")
  updatedAt              DateTime  @updatedAt @map("updated_at")

  @@map("goals")
}
