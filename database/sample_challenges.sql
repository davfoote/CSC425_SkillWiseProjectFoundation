-- Insert sample challenges for testing Challenge Cards UI (User Story 4)

INSERT INTO challenges (
  title, 
  description, 
  instructions,
  category, 
  difficulty_level, 
  estimated_time_minutes,
  points_reward,
  max_attempts,
  requires_peer_review,
  is_active,
  tags,
  learning_objectives
) VALUES 
(
  'JavaScript Fundamentals',
  'Learn the basics of JavaScript programming including variables, functions, and control structures.',
  'Complete exercises on variable declaration, function creation, and conditional statements. Write clean, readable code and include comments explaining your logic.',
  'Programming',
  'easy',
  45,
  50,
  3,
  false,
  true,
  ARRAY['javascript', 'fundamentals', 'variables', 'functions'],
  ARRAY['Understand variable declaration', 'Create basic functions', 'Use conditional statements']
),
(
  'React Component Design',
  'Build reusable React components with proper state management and props handling.',
  'Create a set of functional components that demonstrate state management with hooks, proper prop passing, and component composition patterns.',
  'Frontend',
  'medium',
  90,
  100,
  3,
  true,
  true,
  ARRAY['react', 'components', 'hooks', 'state'],
  ARRAY['Create functional components', 'Manage state with hooks', 'Implement component composition']
),
(
  'Database Optimization',
  'Optimize database queries for better performance in PostgreSQL.',
  'Analyze slow queries, create appropriate indexes, and rewrite queries for optimal performance. Document your optimization strategy.',
  'Backend',
  'hard',
  120,
  150,
  2,
  true,
  true,
  ARRAY['postgresql', 'optimization', 'indexing', 'queries'],
  ARRAY['Analyze query performance', 'Create effective indexes', 'Optimize query structure']
),
(
  'API Design Patterns',
  'Design RESTful APIs following best practices and proper HTTP methods.',
  'Create a complete REST API specification including endpoints, request/response formats, error handling, and authentication patterns.',
  'Backend',
  'medium',
  75,
  100,
  3,
  false,
  true,
  ARRAY['api', 'rest', 'http', 'design'],
  ARRAY['Design RESTful endpoints', 'Implement proper HTTP methods', 'Handle errors gracefully']
),
(
  'CSS Grid Layout',
  'Master CSS Grid for creating complex responsive layouts.',
  'Build a responsive web layout using CSS Grid that works across desktop, tablet, and mobile devices. Include proper fallbacks.',
  'Frontend',
  'easy',
  60,
  75,
  3,
  false,
  true,
  ARRAY['css', 'grid', 'responsive', 'layout'],
  ARRAY['Use CSS Grid syntax', 'Create responsive layouts', 'Implement mobile-first design']
),
(
  'Node.js Authentication',
  'Implement secure user authentication with JWT tokens.',
  'Build a complete authentication system including registration, login, token refresh, and protected routes. Follow security best practices.',
  'Backend',
  'hard',
  150,
  200,
  2,
  true,
  true,
  ARRAY['nodejs', 'jwt', 'authentication', 'security'],
  ARRAY['Implement JWT authentication', 'Secure API endpoints', 'Handle token refresh']
),
(
  'Algorithmic Thinking',
  'Solve coding problems using fundamental algorithms and data structures.',
  'Implement solutions for classic algorithmic problems including sorting, searching, and graph traversal. Optimize for time and space complexity.',
  'Programming',
  'medium',
  90,
  125,
  3,
  false,
  true,
  ARRAY['algorithms', 'data-structures', 'complexity', 'problem-solving'],
  ARRAY['Implement basic algorithms', 'Analyze time complexity', 'Choose appropriate data structures']
),
(
  'Test-Driven Development',
  'Practice TDD methodology with comprehensive test suites.',
  'Write tests first, then implement the functionality. Create unit tests, integration tests, and ensure high code coverage.',
  'Programming',
  'medium',
  100,
  110,
  3,
  true,
  true,
  ARRAY['tdd', 'testing', 'jest', 'coverage'],
  ARRAY['Write tests before code', 'Achieve high test coverage', 'Understand testing patterns']
),
(
  'Git Workflow Mastery',
  'Master Git version control with advanced branching and merging strategies.',
  'Demonstrate proficiency with Git workflows including feature branches, pull requests, merge conflicts resolution, and collaborative development practices.',
  'DevOps',
  'easy',
  45,
  60,
  3,
  false,
  true,
  ARRAY['git', 'version-control', 'branching', 'collaboration'],
  ARRAY['Use Git branching effectively', 'Resolve merge conflicts', 'Collaborate through pull requests']
),
(
  'Docker Containerization',
  'Containerize applications using Docker best practices.',
  'Create Docker containers for a full-stack application, write efficient Dockerfiles, and use Docker Compose for multi-container applications.',
  'DevOps',
  'hard',
  180,
  175,
  2,
  true,
  true,
  ARRAY['docker', 'containers', 'deployment', 'orchestration'],
  ARRAY['Write efficient Dockerfiles', 'Use Docker Compose', 'Implement container best practices']
);